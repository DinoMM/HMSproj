@namespace LudskeZdrojeModul
@page "/SpravaRoli"
@inject SpravaRoliViewModel ViewModel


<ApproveModal @ref=AprovMod ID="deletemodal"
              Text="Naozaj chcete odstrániť tento riadok?<br>POZOR môžu sa vymazať prvky, ktoré sú spojené s touto položkou!"
              FuncOnSucc="EventCallback.Empty"
              FuncOnDiss="EventCallback.Empty">
</ApproveModal>
<InfoModal @ref="InfoModHasConneciton" ID="infomodalhascon"
           Text="Nemožno vymazať profesiu lebo ju má niekto priradenú alebo patrí k základnym profesiam.">
</InfoModal>

<div class="container">

    <div class="row pb-1">

        <div class="col-1"></div>

        <div class="col-3 d-flex justify-content-bottom mb-2">
            <SearchInput NumCols="1" TableID="tableid"></SearchInput>
        </div>

        <div class="col-8">
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-primary" @onclick="Close">❌Späť</button>
                <button @onclick="@(() => Navigator.NavigateTo(Navigator.AddNextUrl("/AddRole")))" type="button" class="btn btn-primary">➕Vytvoriť profesiu</button>
                <button type="button" @onclick="Open" disabled="@(marked == null)" class="btn btn-primary">Otvoriť</button>
            </div>
        </div>

        <div class="col-1"></div>
    </div>

    <div class="row">
        <div class="col-1"></div>
        <div class="col-12" style="max-height: 30rem;overflow: auto;">
            <SimpleTable ID="tableid">
                <THEAD>

                <ThSort>Profesia</ThSort>
                <ThSort>Základná profesia</ThSort>
                <th class="col-resize" scope="col"></th>

                </THEAD>
                <TBODY>
                    @if (ViewModel.NacitavaniePoloziek)
                    {
                        <div class="ms-1">
                            <SpinnerLoading Size="2.0"></SpinnerLoading>
                        </div>
                    }
                    else
                    {
                        @foreach (var item in ViewModel.ZoznamRoli)
                        {

                            <tr @onclick=@(() => marked = item) class="@(marked == item ? "selected-row" : "")" @ondblclick="@(() => Open())" style="cursor: pointer;">

                                <td class="col-resize">@item.Name</td>
                                <td class="col-resize">
                                    <SimpleCheckMark Checked="@(ViewModel.IsDefaultRole(item))" Size="5"></SimpleCheckMark>
                                </td>
                                <td>
                                    <ButtonRemove Disabled="@(!ViewModel.MoznoVymazat(item))" OnClick="@(() => Delete(item))"></ButtonRemove>
                                </td>

                            </tr>
                        }
                    }
                    <span id="observerTarget"></span>
                </TBODY>

            </SimpleTable>
        </div>
        <div class="col-1"></div>
    </div>

    <div class="row">
        <div class="col-12"></div>
    </div>

</div>





@code {
    private Microsoft.AspNetCore.Identity.IdentityRole? marked;
    private ApproveModal AprovMod = new();
    private InfoModal InfoModHasConneciton = new();

    protected override void OnInitialized()
    {
        if (!ViewModel.ValidateUser())
        {
            Navigator.NavigateTo(Navigator.RemoveLastUrl());
            return;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.NacitajZoznamy();
    }

    public void Close()
    {
        Navigator.NavigateTo(Navigator.RemoveLastUrl());
    }

    public void Open()
    {
        if (marked != null)
        {
            if (!ViewModel.IsDefaultRole(marked))
            {
                objectHolder.Add(marked);
                Navigator.NavigateTo(Navigator.AddNextUrl("/ZmenaRole"));
            }
        }
    }

    public async Task Delete(Microsoft.AspNetCore.Identity.IdentityRole role)
    {
        if (ViewModel.MoznoVymazat(role))
        {
            if (await AprovMod.OpenModal(true))
            {
                ViewModel.Vymazat(role);
            }
        }
        else
        {
            await InfoModHasConneciton.OpenModal();
        }
    }

}
