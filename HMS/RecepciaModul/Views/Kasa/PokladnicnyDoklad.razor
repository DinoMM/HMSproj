@namespace RecepciaModul
@page "/Kasa/PokladnicnyDoklad"
@inject PokladnicnyDokladViewModel ViewModel


<ApproveModal @ref="approvmod" ID="@(ID + "approvmod")" FuncOnDiss="EventCallback.Empty" FuncOnSucc="EventCallback.Empty" Text="Chcete zaplatiť tento blok?">

</ApproveModal>

<InfoModal @ref="infomodal" ID="@(ID + "infomodal")" Text="Zmeny boli uložené">

</InfoModal>

<EditForm Model="ViewModel.PoklDokladInput" OnValidSubmit="() => Save()">
    <DataAnnotationsValidator />

    <div class="container px-5">

        <div class="row g-3 p-3">

            <div class="">
                <h2 class="text-center">Informácie&nbsp;o&nbsp;doklade</h2>
            </div>
            <div class="col">

                <div class="row">
                    <div class="col col-8">
                        <label>ID</label>
                        <input type="text" value="@ViewModel.PoklDokladInput.ID" disabled class="form-control" />
                    </div>
                </div>
                <div class="row">
                    <div class="col col-8">
                        <label>Kasa</label>
                        <input type="text" value="@ViewModel.PoklDokladInput.Kasa" disabled class="form-control" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-8">
                        <label>Typ Platby</label>
                        <InputSelect @bind-Value="@ViewModel.PoklDokladInput.TypPlatby" disabled="@ReadOnly" class="form-select">
                            <option value="false">Platobná karta</option>
                            <option value="true">Hotovosť</option>
                        </InputSelect>
                        <ValidationMessage For="@(() => ViewModel.PoklDokladInput.TypPlatby)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col col-8">
                        <label>Vznik</label>
                        <input type="datetime" value="@ViewModel.PoklDokladInput.Vznik" disabled class="form-control" />
                    </div>
                </div>
                <div class="row">
                    <div class="col col-5 ">
                        <label class="me-2">Zaplatený:</label>
                        <SimpleCheckMark Size="3" Checked="ViewModel.PoklDokladInput.Spracovana"></SimpleCheckMark>
                    </div>
                </div>
                <div class="row">
                    <div class="col col-8">
                        <label>Poznámka</label>
                        <InputTextArea @bind-Value="@ViewModel.PoklDokladInput.Poznamka" disabled="@ReadOnly" class="form-control" placeholder="Poznámka dokladu" />
                        <ValidationMessage For="@(() => ViewModel.PoklDokladInput.Poznamka)" />
                    </div>
                </div>


            </div>




            <div class="vr p-0"></div>
            <div class="col">
                <h2 class="text-center">Položky</h2>
                <div class="w-25 d-flex">
                    <SearchInput ID="@(ID + "searchitems")" PlaceHolder="Vyhľadaj položku.." TableID="@(ID + "tableitems")" NumCols="4"></SearchInput>
                    <div class="ms-2">
                        <ButtonAdd Disabled="@(ReadOnly || OnlyOneItem || !ViewModel.ValidateUserCRU())"></ButtonAdd>
                    </div>
                </div>
                <div class="col-12 mt-2" style="max-height: 30rem;overflow: auto;">
                    <SimpleTable ID="@(ID + "tableitems")">
                        <THEAD>


                        <th class="col-resize" scope="col">Názov</th>
                        <th class="col-resize" scope="col">Množstvo</th>
                        <th class="col-resize" scope="col">Cena</th>
                        <th class="col-resize" scope="col">DPH</th>
                        <th class="col-resize" scope="col">Cena&nbsp;DPH</th>
                        <th class="col-resize" scope="col">Celková&nbsp;suma</th>
                        <th class="col-resize" scope="col">Celková&nbsp;suma&nbsp;DPH</th>
                        <th class="col-resize" scope="col"></th>

                        </THEAD>
                        <TBODY>

                            @foreach (var item in ViewModel.ZoznamPoloziek)
                            {
                                <tr @ondblclick="() => OpenItem(item)">
                                    <td class="col-resize">@item.Nazov</td>
                                    <td class="col-resize">@item.Mnozstvo</td>
                                    <td class="col-resize">@item.Cena.ToString("F3")</td>
                                    <td class="col-resize">@item.DPH</td>
                                    <td class="col-resize">@item.CenaDPH</td>
                                    <td class="col-resize">@item.CelkovaCena</td>
                                    <td class="col-resize">@item.CelkovaCenaDPH</td>
                                    <td>
                                        <ButtonRemove Disabled="@(!ViewModel.ValidateUserD() || ReadOnly || OnlyOneItem)" OnClick="@(() => DeleteItem(item))">
                                        </ButtonRemove>
                                    </td>
                                </tr>
                            }
                        </TBODY>
                    </SimpleTable>
                </div>

            </div>

        </div>

        <hr>

        <div class="row pt-2">
            <div class="col text-center">
                @if (!AsComponent)
                {
                    <button type="button" @onclick="Close" class="btn btn-secondary me-2">Späť</button>
                }
                <SimpleButton ID="ulozbuttonid" Type="submit" disabled="@ReadOnly" ZmenaStavuTextu="@(!ViewModel.Existuje())" ZmenaTextu="@(("Vytvoriť", "Uložiť"))"></SimpleButton>
                <SimpleButton ID="zaplatbuttnid" Type="button" disabled="@(ReadOnly || (!ViewModel.Existuje() && ViewModel.AktKasa == null))" OnClick="Buy" ZmenaTextu="@(("Zaplatiť", "Zaplatiť"))"></SimpleButton>
            </div>
        </div>
    </div>
</EditForm>



@code {

        [Parameter]
        public bool AsComponent { get; set; } = false;

        [Parameter]
        public string ID { get; set; } = "pokladdokladid";

        [Parameter]
        public bool OnlyOneItem { get; set; } = false;

    public bool ReadOnly { get; set; } = false;

    private InfoModal infomodal = new();
    private ApproveModal approvmod = new();

    protected override void OnInitialized()
    {
        if (!ViewModel.ValidateUser())
        {
            Navigator.NavigateTo(Navigator.RemoveLastUrl());
            return;
        }

        var founded = objectHolder.Find<DBLayer.Models.Kasa>();   //pokusi sa ziskat objekt z uloziska
        if (founded != null)
        {
            ViewModel.AktKasa = founded;
        }


        var foundedPokl = objectHolder.Remove<DBLayer.Models.PokladnicnyDoklad>();   //pokusi sa ziskat objekt z uloziska
        if (foundedPokl != null)
        {
            ViewModel.SetPoklDokl(foundedPokl);
        }

        if (AsComponent)
        {
            //len pre unicony, ktore maju existovat 1x pre 1 PD v celom systeme
            var foundedUNIQUE = objectHolder.Remove<DBLayer.Models.UniConItemPoklDokladu>();   //pokusi sa ziskat objekt z uloziska
            if (foundedUNIQUE != null)
            {
                ViewModel.UniConItem = foundedUNIQUE;
            }
        }
        ReadOnly = ViewModel.PoklDokladInput.Spracovana;


    }

    protected override async Task OnInitializedAsync()
    {
        if (!ViewModel.ValidateUser())
        {
            return;
        }



        await ViewModel.NacitajZoznamy();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (OnlyOneItem && ViewModel.UniConItem != null)
            {
                await Save(silent: true);
                StateHasChanged();
                return;
            }
        }
    }


    public void Close()
    {
        Navigator.NavigateTo(Navigator.RemoveLastUrl());
    }

    public async Task Save(bool silent = false)
    {
        if (await ViewModel.Ulozit())
        {
            if (!silent)
            {
                await infomodal.OpenModal(true);
            }
        }
    }

    public void OpenItem(DBLayer.Models.ItemPokladDokladu item)
    {
        if (!OnlyOneItem)
        {
            //tu telo
        }
    }

    public void DeleteItem(DBLayer.Models.ItemPokladDokladu item)
    {
        ViewModel.ZoznamPoloziek.Remove(item);
    }

    public async Task Buy()
    {
        if (await ViewModel.Predat())
        {
            infomodal.UpdateText("Doklad bol zaplatený");
            await infomodal.OpenModal(true);
        }
        else
        {
            infomodal.UpdateText("V doklade je chyba, skontrolujte položky");
            await infomodal.OpenModal(true);
        }
    }
}
