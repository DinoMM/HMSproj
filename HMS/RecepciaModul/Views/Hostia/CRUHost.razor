@namespace RecepciaModul
@page "/Hostia/CRUDHost"
@inject CRUHostViewModel ViewModel
@implements IDisposable
@using Microsoft.AspNetCore.Components.Forms
@using RESTCountries.NET.Services


<div style="z-index:52">
    <ItemFinderTable T="IdentityUserWebOwn" @ref="itemFindUser" ID="fndwebusrho"
                     ColNames="@(new() {"Meno", "Priezvisko", "Username", "Email", "Telefón" })"
                     SearchedValue="@(ViewModel.HostInput.GuestZ?.Email ?? "")"
                     OnlyProtectedPersonalDataAttribute="true"
                     SelectEmptyInstance="true">

    </ItemFinderTable>

    <InfoModal @ref="InfoModSaved" ID="infosaveda"
               Text="Zmeny boli uložené" />

    <ItemFinderTable T="string" @ref="iftcountry" ID="iftcountryhost"
                     ColNames="@(new() { "Národ"})"
                     ColValues="RestCountriesService.GetAllCountriesNames(useCommonName: true).ToList()"
                     SizeInRem="20">
    </ItemFinderTable>
</div>

<EditForm Model="ViewModel.HostInput" OnValidSubmit="Save">
    <DataAnnotationsValidator />

    <div class="container px-5">

        <div class="row g-3 p-3">

            <div class="">
                <h2 class="text-center">Informácie&nbsp;o&nbsp;hosťovi</h2>
            </div>
            <div class="col">

                <div class="row">
                    <div class="col col-8">
                        <label>Meno*</label>
                        <InputText @bind-Value="@ViewModel.HostInput.Name" disabled="@ReadOnly" class="form-control" placeholder="Meno" />
                        <ValidationMessage For="@(() => ViewModel.HostInput.Name)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-8">
                        <label>Priezvisko*</label>
                        <InputText @bind-Value="@ViewModel.HostInput.Surname" disabled="@ReadOnly" class="form-control" placeholder="Priezvisko" />
                        <ValidationMessage For="@(() => ViewModel.HostInput.Surname)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-8">
                        <label>Adresa</label>
                        <InputText @bind-Value="@ViewModel.HostInput.Address" disabled="@ReadOnly" class="form-control" placeholder="Adresa" />
                        <ValidationMessage For="@(() => ViewModel.HostInput.Address)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-8">
                        <label>Pohlavie</label>
                        <InputSelect class="form-select" disabled="@ReadOnly" @bind-Value="@ViewModel.HostInput.Sex">
                            <option value="false">Muž</option>
                            <option value="true">Žena</option>
                        </InputSelect>
                        <ValidationMessage For="@(() => ViewModel.HostInput.Sex)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-8">
                        <label>Dátum&nbsp;narodenia</label>
                        <InputDate id="brthdateid" class="form-control" disabled="@ReadOnly" @bind-Value="@ViewModel.HostInput.BirthDate" />
                        <ValidationMessage For="@(() => ViewModel.HostInput.BirthDate)" />
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="row">
                    <div class="col col-8">
                        <label>Rodné&nbsp;číslo</label>
                        <InputText @bind-Value="@ViewModel.HostInput.BirthNumber" disabled="@ReadOnly" class="form-control" placeholder="Rodné číslo" />
                        <ValidationMessage For="@(() => ViewModel.HostInput.BirthNumber)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col col-8">
                        <label>Číslo&nbsp;občianského</label>
                        <InputText id="citizenid" @bind-Value="@ViewModel.HostInput.CitizenID" disabled="@ReadOnly" class="form-control" placeholder="Číslo občianského" />
                        <ValidationMessage For="@(() => ViewModel.HostInput.CitizenID)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col col-8">
                        <label>Číslo&nbsp;pasu</label>
                        <InputText id="passportid" @bind-Value="@ViewModel.HostInput.Passport" disabled="@ReadOnly" class="form-control" placeholder="Číslo pasu" />
                        <ValidationMessage For="@(() => ViewModel.HostInput.Passport)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col col-8">
                        <label>Národnosť</label>
                        <input type="text" disabled readonly value="@ViewModel.HostInput.Nationality" class="form-control" />
                    </div>
                    <div class="col-1">
                        <div style="height: 24px"></div>
                        <BtnFind Disabled="@ReadOnly" OnClick="FindNationality"></BtnFind>
                    </div>
                </div>
                <div class="row">
                    <div class="col col-8">
                        <label>Poznámka</label>
                        <InputTextArea @bind-Value="@ViewModel.HostInput.Note" disabled="@ReadOnly" class="form-control" placeholder="Poznámka k osobe.." />
                        <ValidationMessage For="@(() => ViewModel.HostInput.Note)" />
                    </div>
                </div>
            </div>

            <div class="vr p-0"></div>
            <div class="col-6">

                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" data-bs-toggle="tab" href="#webuser">Web&nbsp;užívateľ</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewModel.Existuje() && !ViewModel.NacitavaniePoloziek ? "" : "disabled")" data-bs-toggle="tab" href="#flags">Značenia</a>
                    </li>
                </ul>

                <div class="tab-content">

                    <div class="tab-pane fade show active" id="webuser">
                        <div class="row">
                            <div class="col col-8">
                                <label>Iniciály</label>
                                <input type="text" disabled class="form-control" value="@((ViewModel.HostInput.GuestZ?.Name?.First() ?? '-') + "." + (ViewModel.HostInput.GuestZ?.Surname ?? "-"))" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-8">
                                <label>Email</label>
                                <input type="text" disabled class="form-control" value="@(ViewModel.HostInput.GuestZ?.Email ?? "-")" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-8">
                                <label>Telefón</label>
                                <input type="text" disabled class="form-control" value="@(ViewModel.HostInput.GuestZ?.PhoneNumber ?? "-")" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col mt-1">
                                <label>Nájsť uživateľa</label>
                                <button type="button" disabled="@ReadOnly" @onclick="FindWebUser" class="btn btn-secondary">
                                    <i class="bi bi-box-arrow-in-down "></i>
                                    @if (ViewModel.NacitavanieZoznamu)
                                    {
                                        <SpinnerLoading ExtraSmall="true"></SpinnerLoading>
                                    }
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade " id="flags">

                        @if (ViewModel.Existuje() && !ViewModel.NacitavaniePoloziek)
                        {
                            <HostConFlagy @ref="HostConFlagyComp" ReadOnlyHost="ViewModel.Host"></HostConFlagy>
                        }

                    </div>

                </div>



            </div>

        </div>

        <hr>

        <div class="row pt-2">
            <div class="col text-center">
                <div class="btn-group" role="group">
                    @if (!AsComponent)
                    {
                        <button type="button" @onclick="Close" class="btn btn-secondary "><IconTextClose></IconTextClose></button>
                    }
                    <SimpleButton ID="ulozbuttonid" Type="submit" disabled="@ReadOnly" ZmenaStavuTextu="@(!ViewModel.Existuje())" ZmenaTextu="@(("Vytvoriť", "Uložiť"))"></SimpleButton>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    /// <summary>
    /// Ak true, tak model vytvorenu/upravenú instanciu ulozí ObjectHolderi, ukladá všetky zmeny
    /// </summary>
    [Parameter]
    public bool AsComponent { get; set; } = false;

    private InfoModal InfoModSaved = new();
    private ItemFinderTable<IdentityUserWebOwn> itemFindUser = new();
    private ItemFinderTable<string> iftcountry = new();
    private HostConFlagy? HostConFlagyComp;

    private bool ReadOnly = false;

    protected override void OnInitialized()
    {
        if (!ViewModel.ValidateUser())
        {
            Navigator.NavigateTo(Navigator.RemoveLastUrl());
            return;
        }
        ReadOnly = !ViewModel.ValidateUserCRU();


        var founded = objectHolder.Remove<DBLayer.Models.Host>();   //pokusi sa ziskat objekt z uloziska
        if (founded != null)
        {
            ViewModel.SetProp(founded);
            ViewModel.NacitavaniePoloziek = false;
            return;
        }
        var foundedGuest = objectHolder.Remove<IdentityUserWebOwn>();   //pokusi sa ziskat objekt z uloziska
        if (foundedGuest != null)
        {
            ViewModel.SetNewWebUser(foundedGuest);
            ViewModel.NacitavaniePoloziek = false;
            return;
        }
        ViewModel.NacitavaniePoloziek = false;
    }

    protected override async Task OnInitializedAsync()
    {
        if (!ViewModel.ValidateUser())
        {
            return;
        }
    }

    public void Close()
    {
        Navigator.NavigateTo(Navigator.RemoveLastUrl());
    }

    public async Task Save()
    {
        if (await ViewModel.PozriVarovania("ulozbuttonid", new() { "brthdateid", "citizenid", "passportid" }))
        {
            return;
        }

        if (await ViewModel.Uloz())
        {
            if (HostConFlagyComp != null)
            {
                HostConFlagyComp.ExternalSave();        //ulozenie flagov
            }
            if (AsComponent)
            {
                objectHolder.Remove<DBLayer.Models.Host>();
                objectHolder.Add(ViewModel.Host);
            }
            await InfoModSaved.OpenModal(true);
        }
    }

    public async Task FindWebUser()
    {
        itemFindUser.ColValues = await ViewModel.GetListWebUsers();
        if (await itemFindUser.OpenModal(true))
        {
            ViewModel.SetNewWebUser(itemFindUser.OutSelection.FirstOrDefault());
        }
    }

    public async Task FindNationality()
    {
        if (await iftcountry.OpenModal(true))
        {
            ViewModel.HostInput.Nationality = iftcountry.OutSelection.FirstOrDefault();
        }
    }

    public void Dispose()
    {
        ViewModel.Host = new();
        ViewModel.HostInput = new();
    }
}
