@namespace RecepciaModul
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject DataContext dbw

<InfoModal @ref="modsaved" Text="Zmeny boli uložené"></InfoModal>

<EditForm Model="Marked" OnValidSubmit="Save">
    <DataAnnotationsValidator />

    <div class="container px-2">

        <div class="row g-3 p-3">
            <div class="col">

                <div class="row">
                    <div class="col col-3">
                        <label>Izba*</label>
                        <InputText @bind-Value="@Marked.RoomNumber" disabled="@ValidateChangeability()" class="form-control" />
                        <ValidationMessage For="@(() => @Marked.RoomNumber)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-3">
                        <label>Počet hostí</label>
                        <InputNumber @bind-Value="@Marked.NumberGuest" disabled="@ValidateChangeability()" class="form-control" />
                        <ValidationMessage For="@(() => Marked.NumberGuest)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-5">
                        <label>Status</label>
                        <select @bind="Marked.Status" disabled="@ValidateChangeability()" class="form-select">
                            @foreach (var status in SelectValues)
                            {
                                <option value="@status">@status</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => Marked.Status)" />
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-5">
                        <label>Príchod</label>
                        <InputDate disabled="@ValidateChangeability()" @bind-Value="@Marked.ArrivalDate" />
                        <ValidationMessage For="@(() => Marked.ArrivalDate)" />
                    </div>
                    <div class="col-5">
                        <label>Odchod</label>
                        <InputDate disabled="@ValidateChangeability()" @bind-Value="@Marked.DepartureDate" />
                        <ValidationMessage For="@(() => Marked.DepartureDate)" />
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="row">
                    <div class="col-4">
                        <label>Celková&nbsp;suma</label>
                        <InputNumber disabled="@ValidateChangeability()" @bind-Value="@Marked.CelkovaSuma" class="form-control" />
                        <ValidationMessage For="@(() => Marked.CelkovaSuma)" />
                    </div>
                    <div class="col-4">
                        <label>Celková&nbsp;suma&nbsp;DPH</label>
                        <input type="number" disabled readonly value="@((double)Marked.CelkovaSuma * 1.2)" class="form-control" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <label>Poukážka</label>
                        <input type="text" disabled readonly value="@(Marked.Coupon?.NameService ?? "-")" class="form-control" />

                    </div>
                    <div class="col-2">
                        <label>Zľava</label>
                        <input type="number" disabled readonly value="@(Marked.Coupon?.Discount ?? 0)" class="form-control" />
                    </div>
                    <div class="col-2">
                        <div style="height: 24px;"></div>
                        <button disabled="@ValidateChangeability()" type="button" @onclick="FindCoupon" class="btn btn-secondary">
                            <i class="bi bi-box-arrow-in-down "></i>
                        </button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <label>Web&nbsp;používateľ</label>
                        <input disabled readonly value="@(Marked.Guest?.Email ?? "-")" class="form-control" />
                    </div>
                    <div class="col">
                        <div style="height: 24px;"></div>
                        <button disabled="@ValidateChangeability()" type="button" @onclick="FindCoupon" class="btn btn-secondary">
                            <i class="bi bi-box-arrow-in-down "></i>
                        </button>
                    </div>
                </div>
                <div class="row">

                </div>

            </div>



        </div>

        <hr>

        <div class="row pt-2">
            <div class="col text-center">
                <SimpleButton Disabled="ValidateChangeability()" ZmenaStavuTextu="Exist()" Type="submit" ZmenaTextu="@(("Uložiť", "Vytvoriť"))"> </SimpleButton>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [EditorRequired]
    [Parameter]
    public DBLayer.Models.Rezervation Marked { get; set; }
    [EditorRequired]
    [Parameter]
    public List<DBLayer.Models.Coupon> ListCoupons { get; set; }
    [EditorRequired]
    [Parameter]
    public List<DBLayer.Models.Host> ListHostia { get; set; }
    [EditorRequired]
    [Parameter]
    public List<DBLayer.Models.Room> ListIzby { get; set; }

    InfoModal modsaved { get; set; }

    public bool Initialized { get; private set; } = false;

    private Array SelectValues = Enum.GetValues(typeof(DBLayer.Models.ReservationStatus));


    protected override void OnInitialized()
    {
        Reset();
        Initialized = true;
    }

    protected override async Task OnInitializedAsync()
    {
    }
    private async Task Save()
    {
        if (!Exist())
        {
            dbw.Add(Marked);
        }
        else
        {
            var found = dbw.Rezervations.FirstOrDefault(x => x.Id == Marked.Id);
            if (found == null)
            {
                return;
            }

            found.setFromReservation(Marked);


        }
        await dbw.SaveChangesAsync();
        await sessionStorage.SetItemAsync("RezervationChanged", true);
        await modsaved.OpenModal(true);
    }

    public void daco()
    {

    }

    private async Task FindCoupon()
    {
    }

    /// <summary>
    /// false - mozne menit hodnoty, true - nemozne menit hodnoty
    /// </summary>
    /// <returns></returns>
    private bool ValidateChangeability()
    {
        if (ValidateSpecial())
        {
            return false;
        }
        if (IsCompleted() || IsStorno())
        {
            return true;
        }
        if (Marked.Status == DBLayer.Models.ReservationStatus.VytvorenaRucne.ToString() || Marked.Status == DBLayer.Models.ReservationStatus.VytvorenaWeb.ToString() || Marked.Status == DBLayer.Models.ReservationStatus.SchvalenaNezaplatena.ToString())
        {
            return false;
        }

        return true;
    }

    private bool ValidateSpecial()
    {
        return UserService.IsLoggedUserInRoles(DBLayer.Models.Rezervation.ROLE_SPECIAL_REZERVACIA);

    }

    public void Reset()
    {
        if (!ValidateSpecial() && ValidateChangeability())
        {
            DBLayer.Models.ReservationStatus[] newarr = new DBLayer.Models.ReservationStatus[3];
            newarr[0] = (DBLayer.Models.ReservationStatus)SelectValues.GetValue(0);
            newarr[1] = (DBLayer.Models.ReservationStatus)SelectValues.GetValue(1);
            newarr[2] = (DBLayer.Models.ReservationStatus)SelectValues.GetValue(2);
            SelectValues = newarr;
        }
        StateHasChanged();
    }

    private bool IsCompleted()
    {
        return Marked.Status == DBLayer.Models.ReservationStatus.SchvalenaZaplatena.ToString();
    }

    private bool IsStorno()
    {
        return Marked.Status == DBLayer.Models.ReservationStatus.Stornovana.ToString();
    }

    private bool Exist()
    {
        return Marked.Id != 0;
    }


}
