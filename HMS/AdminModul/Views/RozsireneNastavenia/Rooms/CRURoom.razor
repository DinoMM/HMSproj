@namespace AdminModul
@page "/Rooms/CRURoom"
@inject CRURoomViewModel ViewModel
@using Microsoft.AspNetCore.Components.Forms

<EditForm Model="ViewModel.Entity" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <div class="container px-5">
        <div class="row">
            <div class="col">
                <h1 class="text-center">Informácie o izbe</h1>
            </div>
        </div>

        <div class="row">

            <div class="col">
                <div class="row">
                    <div class="col-3">
                        <label>Číslo&nbsp;izby</label>
                        <input type="text" @bind="@ViewModel.Entity.RoomNumber" class="form-control" disabled="@ViewModel.EntitySaver.Exist" />
                    </div>
                    <ValidationMessage For="@(() => ViewModel.Entity.RoomNumber)" />
                </div>
                <div class="row">
                    <div class="col-5">
                        <label>Kategória</label>
                        <input type="text" @bind="@ViewModel.Entity.RoomCategory" class="form-control" disabled="@(!CanEdit && ViewModel.EntitySaver.Exist)" />
                    </div>
                    <ValidationMessage For="@(() => ViewModel.Entity.RoomCategory)" />
                </div>
                <div class="row">
                    <div class="col-5">
                        <label>Cena za noc</label>
                        <input type="number" @bind="@ViewModel.Entity.Cost" class="form-control" step="0.01" />
                    </div>
                    <ValidationMessage For="@(() => ViewModel.Entity.Cost)" />
                </div>
                <div class="row">
                    <div class="col-4">
                        <label>Max. počet hostí</label>
                        <input type="text" @bind="@ViewModel.Entity.MaxNumberOfGuest" class="form-control" disabled="@(!CanEdit && ViewModel.EntitySaver.Exist)" />
                    </div>
                    <ValidationMessage For="@(() => ViewModel.Entity.MaxNumberOfGuest)" />
                </div>
            </div>

            <div class="col">
                <div class="row">
                    <div class="col-6">
                        <label>Status</label>
                        <select @bind="ViewModel.EntitySaver_RoomInfo.Input.Status" class="form-select">
                            @foreach (DBLayer.Models.HSKModels.RoomStatus item in Enum.GetValues(typeof(DBLayer.Models.HSKModels.RoomStatus)))
                            {
                                <option value="@item">@item.GetDisplayName()</option>
                            }
                        </select>

                        <ValidationMessage For="@(() => ViewModel.EntitySaver_RoomInfo.Input.Status)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <label>Posledná&nbsp;zmena</label>
                        <input type="text" value="@ViewModel.EntitySaver_RoomInfo.Input.LastUpdate.ToString("dd.MM.yyyy HH:mm:ss")" disabled class="form-control" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-6">
                        <label>Poznámka</label>
                        <InputTextArea @bind-Value="@ViewModel.EntitySaver_RoomInfo.Input.Poznamka" class="form-control" placeholder="Poznámka" />
                        <ValidationMessage For="@(() => ViewModel.EntitySaver_RoomInfo.Input.Poznamka)" />
                    </div>
                </div>
            </div>

        </div>
        <div class="row pt-2">
            <div class="col text-center">
                <div class="btn-group" role="group">
                    <SimpleButton Type="submit" Disabled="!ViewModel.AnyModify()" ZmenaStavuTextu="@(!ViewModel.EntitySaver.Exist)" ZmenaTextu="@(("Vytvoriť", "Uložiť"))"></SimpleButton>
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {

    [Parameter]
    public bool CanEdit { get; set; } = true;

    protected override void OnInitialized()
    {
        ViewModel.EntitySaver.CanSetEntity(objectHolder.Remove<DBLayer.Models.Room>()); //pokusi sa ziskat objekt z uloziska
        ViewModel.EntitySaver_RoomInfo.CanSetEntity(ViewModel.EntitySaver.Original?.RoomInfo);
    }

    private void Save()
    {
        ViewModel.Save();
    }

}
