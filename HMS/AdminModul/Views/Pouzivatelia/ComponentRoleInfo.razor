@namespace AdminModul
@using Microsoft.AspNetCore.Components.Forms

<div>
    <p>Role: @Role</p>
    <p>User: @User.UserName</p>
</div>

@switch (Role)
{
    case RolesOwn.Skladnik:
        {
            var ViewModel = new SkladnikViewModel(db, User);

            <div class="row">
                <label>Určenie skladov</label>
                <div class="list-group w-75" style="height: 8rem; overflow-y: auto">
                    @foreach (var item in ViewModel.ZoznamSklad)
                    {
                        <a @onclick="@(() => { ViewModel.Vyber(item); ViewModel.Saved = false; })" class="list-group-item list-group-item-action @(ViewModel.Obsahuje(item) ? "active" : "")" style="cursor:pointer">@item.ID - @item.Nazov</a>
                    }
                </div>
            </div>
            <div class="row">
                <SimpleButton Type="button" Disabled="ViewModel.Saved" OnClick="ViewModel.Uloz"></SimpleButton>
            </div>


            break;
        }
    default: break;
}

@code {

    [Parameter]
    public RolesOwn Role { get; set; } = RolesOwn.Skladnik;

    [Parameter]
    public IdentityUserOwn User { get; set; } = new();

    [Parameter]
    public DBContext db { get; set; }

    public ComponentRoleInfo()
    {
        var a = 5;
    }

    #region Triedy
    private class SkladnikViewModel
    {
        public List<SkladUzivatel> ZoznamOznacen = new();
        public List<Sklad> ZoznamSklad = new();

        public bool Saved { get; set; } = true;


        readonly DBContext _db;
        readonly IdentityUserOwn _user;
        public SkladnikViewModel(DBContext db, IdentityUserOwn user)
        {
            _db = db;
            _user = user;

            ZoznamSklad = _db.Sklady.ToList();
            ZoznamOznacen = _db.SkladUzivatelia.Where(x => x.Uzivatel == _user.Id).ToList();
        }

        public void Vyber(Sklad sklad)  //ak neni tak sa prida, ak je tak sa odobere
        {
            var found = ZoznamOznacen.FirstOrDefault(x => x.Sklad == sklad.ID);
            if (found == null)
            {
                ZoznamOznacen.Add(new SkladUzivatel()
                {
                    Sklad = sklad.ID,
                    Uzivatel = _user.Id
                });
            }
            else
            {
                ZoznamOznacen.Remove(found);
            }
        }

        public bool Obsahuje(Sklad sklad)
        {
            return ZoznamOznacen.FirstOrDefault(x => x.Sklad == sklad.ID) != null;
        }

        public void Uloz()
        {
            var zozOzn = _db.SkladUzivatelia.Where(x => x.Uzivatel == _user.Id).ToList();
            foreach (var item in zozOzn)        //najskor vymazeme vsetky zaznamy
            {
                _db.SkladUzivatelia.Remove(item);
            }
            foreach (var item in ZoznamOznacen)        //potom pridame
            {
                _db.SkladUzivatelia.Add(item);
            }
            _db.SaveChanges();
            Saved = true;
        }
    }
    #endregion
}
