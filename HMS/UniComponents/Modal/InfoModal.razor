@namespace UniComponents
@inject IJSRuntime JSRuntime
@implements IModal
<!-- Modal -->
<div class="modal fade" id="@ID" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header @(ChangeColor ? "custom-modal-header" : "")">
                <h5 class="modal-title" id="exampleModalLabel">@Header</h5>
                @* <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> *@
            </div>
            <div class="modal-body @(ChangeColor ? "custom-modal-body" : "")" id="modalTextLabel">
                @((MarkupString)Text)
            </div>
            <div class="modal-footer @(ChangeColor ? "custom-modal-footer" : "")">
                @* <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> *@
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick=@(async () => { CloseModal(); await FuncAction.InvokeAsync(); })>OK</button>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string Header { get; set; } = "Oznam";

    [Parameter]
    [EditorRequired]
    public string Text { get; set; }

    [Parameter]
    public EventCallback FuncAction { get; set; }

    [Parameter]
    public string ID { get; set; } = "exampleModalInfo";

    /// <summary>
    /// Nastaví zmenu farby okna na predvolenú, default false
    /// </summary>
    [Parameter]
    public bool ChangeColor { get; set; } = false;

    private TaskCompletionSource<bool> tcs;
    private bool tstop = false;

    public async Task<bool> OpenModal(bool stop = false)
    {
        tstop = stop;
        if (stop)
        {
            tcs = new TaskCompletionSource<bool>();
            await JSRuntime.InvokeVoidAsync("eval", "$('#" + ID + "').modal('show');");
            await tcs.Task;
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("eval", "$('#" + ID + "').modal('show');");   //(pomohol som si z internetu tutoriály/AI)
        }
        return true;
    }

    private void CloseModal()
    {
        if (tstop)
        {
            tcs.SetResult(true);
        }
    }

    public void UpdateText(string newText)
    {
        Text = newText;
        StateHasChanged(); // Trigger a re-render
    }
}
