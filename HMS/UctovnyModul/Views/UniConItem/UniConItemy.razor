@namespace UctovnyModul
@page "/UniConItemy"
@inject UniConItemyViewModel ViewModel


<ApproveModal @ref=AprovMod ID="deletemodal"
              Text="Naozaj chcete odstrániť tento riadok?<br>POZOR môžu sa vymazať prvky, ktoré sú spojené s touto položkou!"
              FuncOnSucc="EventCallback.Empty"
              FuncOnDiss="EventCallback.Empty">
</ApproveModal>

<div class="container">

    <div class="row pb-1">

        <div class="col-1"></div>

        <div class="col-3 d-flex justify-content-bottom mb-2">
            <SearchInput NumCols="5" TableID="tableid" PlaceHolder="Vyhľadaj položku..."></SearchInput>
        </div>

        <div class="col-8">
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-primary" @onclick="Close">❌Späť</button>
                <button @onclick="Create" type="button" disabled="@(!ViewModel.ValidateUserCRUD())" class="btn btn-primary">➕Vytvoriť položku</button>
                <button type="button" @onclick="Open" disabled="@(marked == null || !ViewModel.ValidateUserCRUD())" class="btn btn-primary">Otvoriť</button>

            </div>
        </div>

        <div class="col-1"></div>
    </div>

    <div class="row">
        <div class="col-1"></div>
        <div class="col-12" style="max-height: 30rem;overflow: auto;">
            <SimpleTable ID="tableid">
                <THEAD>

                <th class="col-resize" scope="col">ID Spojenia</th>
                <th class="col-resize" scope="col">ID</th>
                <th class="col-resize" scope="col">Typ</th>
                <th class="col-resize" scope="col">Názov</th>
                <th class="col-resize" scope="col">Cena</th>
                <th class="col-resize" scope="col"></th>

                </THEAD>
                <TBODY>
                    @if (ViewModel.NacitavaniePoloziek)
                    {
                        <div class="ms-1">
                            <SpinnerLoading Size="2.0"></SpinnerLoading>
                        </div>
                    }
                    else
                    {
                        <Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize Items="ViewModel.ZoznamPoloziek" Context="item" SpacerElement="tr" ItemSize="50">
                            <ItemContent>

                                <tr @onclick=@(() => marked = item) class="@(marked == item ? "selected-row" : "")" @ondblclick="@(() => Open())" style="cursor: pointer;">

                                    <td class="col-resize">@item.ID</td>
                                    <td class="col-resize">@item.GetID()</td>
                                    <td class="col-resize">@item.GetTypeUni()</td>
                                    <td class="col-resize">@item.GetNameUni()</td>
                                    <td class="col-resize">@item.GetCenaUni()</td>
                                    <td>
                                        @if (ViewModel.ValidateUserCRUD())
                                        {
                                            <ButtonRemove Disabled="@(!ViewModel.MoznoVymazat(item))" OnClick="@(() => Delete(item))" TooltipMessage="Nemožno vymazať túto položku, lebo je spojená s dokladom."></ButtonRemove>
                                        }
                                    </td>

                                </tr>
                            </ItemContent>
                            <EmptyContent>
                                <tr>
                                    <div class="h3 text-dark">Zoznam je prázdny</div>
                                </tr>
                            </EmptyContent>
                            <Placeholder>
                                <div class="ms-1">
                                    <SpinnerLoading Size="2.0"></SpinnerLoading>
                                </div>
                            </Placeholder>
                        </Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize>
                    }
                </TBODY>

            </SimpleTable>
        </div>

    </div>
</div>

@code {

    private DBLayer.Models.UniConItemPoklDokladu? marked;
    private ApproveModal AprovMod = new();

    protected override void OnInitialized()
    {
        if (!ViewModel.ValidateUser())
        {
            Navigator.NavigateTo(Navigator.RemoveLastUrl());
            return;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (!ViewModel.ValidateUser())
        {
            return;
        }
        await ViewModel.NacitajZoznamy();
    }

    public void Close()
    {
        Navigator.NavigateTo(Navigator.RemoveLastUrl());
    }

    public void Open()
    {
        if (marked != null)
        {
            if (ViewModel.ValidateUserCRUD())
            {
                objectHolder.Add(marked);
                Navigator.NavigateTo(Navigator.AddNextUrl("/CRUUniItem"));
            }
        }
    }

    public void Create()
    {
        if (ViewModel.ValidateUserCRUD())
        {
            Navigator.NavigateTo(Navigator.AddNextUrl("/CRUUniItem"));
        }
    }

    public async Task Delete(DBLayer.Models.UniConItemPoklDokladu item)
    {
        if (ViewModel.MoznoVymazat(item))
        {
            if (await AprovMod.OpenModal(true))
            {
                ViewModel.Vymazat(item);
            }
        }
    }

}

