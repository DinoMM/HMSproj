@namespace SkladModul
@page "/Objednavka"
@inject ObjednavkaViewModel ViewModel
@inject ObjectHolder Holder

@using Sve.Blazor.InfiniteScroll.Components
@using OBJ = DBLayer.Models.Objednavka

<ApproveModal @ref=AprovMod ID="deletemodal"
              Text="Naozaj chcete odstrániť tento riadok?"
              FuncOnSucc="DeleteCommand"
              FuncOnDiss="EventCallback.Empty">
</ApproveModal>

<div class="container">
    <div class="row pb-1">
        <div class="col-3 d-flex justify-content-bottom mb-2">
            <SearchInput NumCols="5" TableID="tableid" PlaceHolder="Vyhľadaj objednávku..."></SearchInput>
        </div>
        <div class="col-8">
            <div class="row">
                <div class="btn-group" role="group">
                    <button class="btn btn-secondary" type="button" @onclick="@(() => Navigator.NavigateTo(Navigator.RemoveLastUrl()))">
                        <IconTextClose></IconTextClose>
                    </button>
                    <button class="btn btn-primary" type="button" @onclick="@(() => Navigator.NavigateTo(Navigator.AddNextUrl("/AddObj")))">
                        <IconTextCreate></IconTextCreate>
                    </button>
                    <button class="btn btn-primary" disabled=@(!IsChecked()) @onclick=@(() => OpenOBJ(marked)) type="button">
                        <IconTextOpen></IconTextOpen>
                    </button>
                    <button class="btn btn-primary" @onclick="GeneratePDF" disabled=@(!IsChecked() || ViewModel.PdfLoading) type="button">
                        <IconText Icon="bi-filetype-pdf">Otvoriť</IconText>
                        @if (ViewModel.PdfLoading)
                        {
                            <SpinnerLoading ExtraSmall="false" />
                        }
                    </button>
                </div>
            </div>
        </div>
        <div class="col-1"></div>
    </div>

    <div class="row">
        @*<div class="col-1"></div>*@
        <div class="col-12" style="max-height: 30rem;overflow: auto;">
            <Sve.Blazor.InfiniteScroll.Components.InfiniteScroll ObserverTargetId="observerTarget" ObservableTargetReached="() => ViewModel.NacitajDalsieCommand.Execute(null)">
                <SimpleTable ID="tableid">
                    <THEAD>
                        <ThSort>ID</ThSort>
                        <ThSort>Dodavateľ</ThSort>
                        <ThSort>Stav</ThSort>
                        <ThSort>Tvorca</ThSort>
                        <ThSort>Dátum vytvorenia</ThSort>
                    <th scope="col"></th>

                    </THEAD>
                    <TBODY>
                        @foreach (var item in ViewModel.ZoznamObjednavok)
                        {

                            <tr @onclick=@(() => marked = item) class="@(marked == item ? "selected-row" : "")" @ondblclick=@(() => OpenOBJ(item)) style="cursor: pointer;">

                                <td class="col-resize" style="cursor:text">@item.ID</td>
                                <td class="col-resize">@item.DodavatelX.Nazov</td>
                                <td class="col-resize">@item.Stav</td>
                                <td class="col-resize">@item.TvorcaX.Surname</td>
                                <td class="col-resize">@item.DatumVznik.ToShortDateString()</td>
                                @if (item.Stav == DBLayer.Models.StavOBJ.Vytvorena ||
                    item.Stav == DBLayer.Models.StavOBJ.Neschvalena ||
                    UserService.LoggedUserRole == DBLayer.RolesOwn.Admin ||
                    UserService.LoggedUserRole == DBLayer.RolesOwn.Riaditel &&
                    item.Stav != DBLayer.Models.StavOBJ.Ukoncena)
                                {
                                    <td><a @onclick=@(() => Delete(item))><i href="#" class="bi bi-x-circle btn btn-danger"></i></a></td>
                                }
                                else
                                {
                                    <td class="col-resize"> </td>
                                }
                            </tr>

                        }
                        <span id="observerTarget"></span>
                    </TBODY>

                </SimpleTable>
            </Sve.Blazor.InfiniteScroll.Components.InfiniteScroll>
        </div>
        <div class="col-1"></div>
    </div>

    <div class="row">
        <div class="col-12"></div>
    </div>

</div>



@code {

    ApproveModal AprovMod = new();
    OBJ? marked;

    private async Task Delete(OBJ item)
    {
        marked = item;
        await AprovMod.OpenModal();
    }

    private void DeleteCommand()
    {
        ViewModel.VymazatCommand.Execute(marked);
        marked = null;
    }

    private void OpenOBJ(OBJ? item)
    {
        if (item != null)
        {
            //ViewModel.OtvorOBJCommand.Execute(item);
            Holder.Container.Add(item);
            Navigator.NavigateTo(Navigator.AddNextUrl("/AddObj"));
            marked = null;
        }
    }

    private bool IsChecked()
    {
        return (marked != null);
    }

    private async Task GeneratePDF()
    {
        if (marked != null)
        {
            await ViewModel.VytvorPDF(marked);
        }
    }

}
