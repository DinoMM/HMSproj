@namespace SkladModul
@page "/Objednavka/AddObj"
@inject AddObjednavViewModel ViewModel

<ApproveModal @ref=AprovModSave ID="savemodal"
              Text="Chcete uložiť zmeny?"
              FuncOnSucc="ViewModel.UlozCommand.Execute"
              FuncOnDiss="ViewModel.NeulozCommand.Execute">
</ApproveModal>
<ApproveModal @ref=AprovModDel ID="delmodal"
              Text="Chcete odstrániť túto objednávku?"
              FuncOnSucc="ViewModel.VymazCommand.Execute"
              FuncOnDiss="EventCallback.Empty">
</ApproveModal>
<ItemFinderTable @ref="itmfindmodal"
                 T="DBLayer.Models.Dodavatel"
                 ColNames="@(new List<string>() { "IČO", "Názov", "Obec", "Adresa", "IBAN", "DIC", "IČ_DPH", "Poznámka" })"
                 ColValues="@ViewModel.GetDodavatelia()"
                 MultiSelect="false"
                 KeyAttributeToo="true"
                 ID="itmfind"></ItemFinderTable>

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="container ">
        <div class="row">
            <h1>Objednávka: @ViewModel.objednavka.ID</h1>
        </div>

        @* *** *@
        <div class="row" style="height: 10rem;">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" data-bs-toggle="tab" href="#home">Dodavateľ</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#profile">Odoberateľ</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#state">Stav</a>
                </li>
            </ul>
            <div class="tab-content">

                <div class="tab-pane fade show active" id="home">
                    <div class="row g-3 p-1 align-items-center">
                        <div class="col-auto">
                            <label for="ICO1" class="col-form-label">*IČO dodavateľa:</label>
                        </div>
                        <div class="col col-2">
                            <input type="text" @onchange="ViewModel.ZmenaDodCommand.Execute" @onkeydown="@((e) => HandleKeyDown(e, "ICO1"))" id="ICO1" class="form-control" disabled=@ViewModel.Locked() value=@ViewModel.objednavka.Dodavatel>
                        </div>
                        <div class="col col-6">
                            <input type="text" readonly @bind="ViewModel.NazovDod" disabled="disabled" id="Nazov1" class="form-control">
                        </div>
                    </div>

                    <div class="row g-2 align-items-center">
                        <div class="col-auto">
                            <label for="PopisBox" class="col-form-label"> Popis objednávky:</label>
                        </div>
                        <div class="col col-5">
                            <textarea id="PopisBox" @bind="ViewModel.Popis" disabled=@ViewModel.Locked() class="form-control" style="resize: none;" />
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="profile">
                    <div class="row g-3 p-1 align-items-center">
                        <div class="col-auto">
                            <label for="ICO2" class="col-form-label">*IČO odoberateľa:</label>
                        </div>
                        <div class="col col-2">
                            <input type="text" @onchange="ViewModel.ZmenaOdoCommand.Execute" @onkeydown="@((e) => HandleKeyDown(e, "ICO2"))" disabled=@ViewModel.Locked() id="ICO2" class="form-control" value=@ViewModel.objednavka.Odberatel>
                        </div>
                        <div class="col col-6">
                            <input type="text" readonly @bind="ViewModel.NazovOdo" disabled="disabled" id="Nazov2" class="form-control">
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="state">
                    <div class="row g-3 p-1 align-items-center">
                        <div class="col-auto">
                            <label for="stavobj" class="col-form-label">Stav:</label>
                        </div>
                        <div class="col-auto">
                            <select id="stavobj" class="form-select" @bind="@ViewModel.Stav" disabled="@(ViewModel.Stav == DBLayer.Models.StavOBJ.Ukoncena)" aria-label="Default select example">
                                @if (ViewModel.Stav == DBLayer.Models.StavOBJ.Ukoncena)
                                {
                                    <option value="@DBLayer.Models.StavOBJ.Ukoncena.ToString()">@DBLayer.Models.StavOBJ.Ukoncena.ToString()</option>

                                }
                                else if (UserService.LoggedUserRole == DBLayer.RolesOwn.Admin || UserService.LoggedUserRole == DBLayer.RolesOwn.Riaditel)
                                {
                                    @foreach (var item in Enum.GetNames(typeof(DBLayer.Models.StavOBJ)).Take(Enum.GetNames(typeof(DBLayer.Models.StavOBJ)).Count() - 1))

                                    {
                                        <option value="@item">@item</option>
                                    }
                                }
                                else if (ViewModel.Stav == DBLayer.Models.StavOBJ.Schvalena)
                                {
                                    <option value="@DBLayer.Models.StavOBJ.Schvalena.ToString()">@DBLayer.Models.StavOBJ.Schvalena.ToString()</option>
                                    <option value="@DBLayer.Models.StavOBJ.Objednana.ToString()">@DBLayer.Models.StavOBJ.Objednana.ToString()</option>
                                }
                                else if (ViewModel.Stav == DBLayer.Models.StavOBJ.Neschvalena)
                                {
                                    <option value="@DBLayer.Models.StavOBJ.Neschvalena.ToString()">@DBLayer.Models.StavOBJ.Neschvalena.ToString()</option>
                                }
                                else
                                {
                                    <option value="@DBLayer.Models.StavOBJ.Vytvorena.ToString()">@DBLayer.Models.StavOBJ.Vytvorena.ToString()</option>
                                }


                            </select>

                        </div>
                    </div>
                </div>

            </div>
        </div>
        @* *** *@
        <div class="row g-3 pt-2 align-items-center justify-content-center">
            <div class="col-auto">
                <div class="btn-group" role="group">
                    <ButtonBasic type="button" class="btn btn-secondary" onclick="GoBack">
                        <IconTextClose></IconTextClose>
                    </ButtonBasic>
                    <ButtonBasic type="button" disabled="@(!ViewModel.CorrectDod || !ViewModel.CorrectOdo)" onclick="GoNext" class="btn btn-primary">
                        @if (!ViewModel.Exist())
                        {
                            <IconTextCreate></IconTextCreate>
                        }
                        else
                        {
                            <IconTextSaveOpen Saved="!ViewModel.PozriZmeny()"></IconTextSaveOpen>
                        }
                    </ButtonBasic>
                    <ButtonBasic type="button" class="btn btn-danger" onclick="DelteObj" disabled="@(!ViewModel.Prazdna)"><IconTextDelete></IconTextDelete></ButtonBasic>

                </div>
            </div>
        </div>

    </div>
</div>



@code {
    ApproveModal AprovModSave = new();
    ApproveModal AprovModDel = new();
    ItemFinderTable<DBLayer.Models.Dodavatel> itmfindmodal = new();

    protected override void OnInitialized()
    {
        var founded = objectHolder.Remove<DBLayer.Models.Objednavka>();   //pokusi sa ziskat objekt z uloziska
        if (founded != null)
        {
            ViewModel.SetExistObjednavka(founded);      //nasla sa existujuca objednavka, nastavujeme model na upravu
        }
    }

    private void GoNext()
    {
        CascadingService.Nacitavanie = true;
        try
        {
            if (ViewModel.PozriZmeny())
            {
                ViewModel.UlozCommand.Execute(null);
                return;
            }
            ViewModel.NastavObjednavkuCommand.Execute(null);
            Navigator.NavigateTo(Navigator.AddNextUrl("/PridatPolozky"));
        }
        finally
        {
            CascadingService.Nacitavanie = false;
        }
    }

    private async Task GoBack()
    {
        if (ViewModel.PozriZmeny())
        {
            await AprovModSave.OpenModal(true);
        }
        Navigator.NavigateTo(Navigator.RemoveLastUrl());
    }

    private async void DelteObj()
    {
        if (await AprovModDel.OpenModal(true))
        {
            Navigator.NavigateTo(Navigator.RemoveLastUrl());
        }
    }

    private async Task HandleKeyDown(KeyboardEventArgs e, string inputId)
    {
        if (e.Key == "Tab" || e.Key == "Enter")
        {
            if (ViewModel.CorrectDod && inputId == "ICO1")
            {
                return;
            }
            if (ViewModel.CorrectOdo && inputId == "ICO2")
            {
                return;
            }
            await itmfindmodal.PassSearchText(await itmfindmodal.GetInputValue(inputId));
            await itmfindmodal.OpenModal(true);
            if (itmfindmodal.OutSelection.Count != 0)
            {
                await itmfindmodal.SetInput(inputId, itmfindmodal.OutSelection.FirstOrDefault().ICO);
                if (inputId == "ICO1")
                {
                    ViewModel.ZmenaDodCommand.Execute(new ChangeEventArgs() { Value = itmfindmodal.OutSelection.FirstOrDefault().ICO });
                }
                else
                {
                    ViewModel.ZmenaOdoCommand.Execute(new ChangeEventArgs() { Value = itmfindmodal.OutSelection.FirstOrDefault().ICO });
                }
            }


        }
    }
}
