@namespace SkladModul
@page "/Sklad/Uzavierka"
@inject UzavierkaViewModel ViewModel

<ApproveModal @ref=AprovMod ID="closeseason"
              Text="Naozaj chcete uzavrieť aktuálne obdobie? <br> Vytvorí sa nové podľa aktuálneho mesiaca alebo nasledovnosti"
              FuncOnSucc="ViewModel.UzavrietObdobie"
              FuncOnDiss="EventCallback.Empty">
</ApproveModal>
<div class="container">
    <div class="row">
        <div class="col-12 text-center">
            <h2 class="font-weight-bold">Uzávierka obdobia</h2>
        </div>
        <div class="row">
            <div class="col-12 text-center">
                <h5>Cena aktuálneho skladu: @ViewModel.GetTotalSumAktual() € </h5>
                <h5>Cena prijatých položiek: @ViewModel.GetTotalSumPrijemky() €</h5>
                <h5>Cena vydaných položiek: @ViewModel.GetTotalSumVydajky() €</h5>
                <h5>Celkový podiel (vydané - prijaté): @ViewModel.GetTotalDiff() €</h5>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 text-center">
            <button type="button" @onclick="@(() => Navigator.NavigateTo(Navigator.RemoveLastUrl()))" class="btn btn-secondary m-2">Späť</button>
            <button class="btn btn-primary fixed-size-button" @onclick="GeneratePDF" disabled=@(ViewModel.PdfLoading) type="button">
                📄Otvoriť ako PDF
                @if (ViewModel.PdfLoading)
                {
                    <SpinnerLoading ExtraSmall="true" />
                }
            </button>
            <button type="button" disabled="@(!ViewModel.MoznoUzavrietObdobie())" class="btn btn-primary m-2" @onclick="CloseSeasson">Uzavrieť obdobie</button>
        </div>
    </div>
    <div class="row">
        <div class="col-12" style="max-height: 30rem;overflow: auto;">
            <SimpleTable>
                <THEAD>
                <ThSort>ID</ThSort>
                <ThSort>Názov Položky</ThSort>
                <ThSort>Merná jednotka</ThSort>
                @*<ThSort>Cena</ThSort>
                <ThSort>Cena s DPH</ThSort>*@
                <ThSort>Cena prij.</ThSort>
                <ThSort>Cena s DPH prij.</ThSort>
                <ThSort>Začiatočné Množstvo</ThSort>

                <ThSort>Prijaté Množstvo</ThSort>
                <ThSort>Vydané Množstvo</ThSort>
                <ThSort>Predané Množstvo</ThSort>
                <ThSort>Aktuálne Množstvo</ThSort>
                </THEAD>
                <TBODY>
                    @if (ViewModel.NacitavaniePoloziek)
                    {
                        <div class="ms-1">
                            <SpinnerLoading Size="2.0"></SpinnerLoading>
                        </div>
                    }
                    else
                    {
                        @foreach (var item in ViewModel.ZoznamPoloziek)
                        {

                            <tr>
                                <td class="col-resize">@item.ID </td>
                                <td class="col-resize">@item.Nazov </td>
                                <td class="col-resize">@item.MernaJednotka </td>
                                @*<td class="col-resize">@ViewModel.GetAktualnaCena(item) </td>
                                <td class="col-resize">@ViewModel.GetAktualnaCenaDPH(item) </td>*@
                                <td class="col-resize">@ViewModel.GetPolozkaPrijemky(item).Cena.ToString("F4") </td>
                                <td class="col-resize">@ViewModel.GetPolozkaPrijemky(item).CenaDPH.ToString("F4") </td>
                                <td class="col-resize">@ViewModel.GetMnozstvoZaciatok(item)</td>
                                <td class="col-resize">@ViewModel.GetPrijateMnozstvo(item)</td>
                                <td class="col-resize">@ViewModel.GetVydateMnozstvo(item)</td>
                                <td class="col-resize">@ViewModel.GetPredaneMnozstvo(item)</td>
                                <td class="col-resize">@ViewModel.GetAktualneMnozstvo(item)</td>
                            </tr>
                        }
                    }
                    <span id="observerTarget"></span>
                </TBODY>
            </SimpleTable>
        </div>
    </div>
</div>


@code {

    ApproveModal AprovMod = new();

    protected override void OnInitialized()
    {
        var founded1 = objectHolder.Find<DBLayer.Models.Sklad>();   //pokusi sa ziskat objekt z uloziska
        if (founded1 == null)
        {
            Navigator.NavigateTo(Navigator.RemoveLastUrl());
            return;
        }
        var founded2 = objectHolder.Find<string>();   //pokusi sa ziskat objekt z uloziska
        if (founded2 != null)
        {
            ViewModel.SetProp(founded1, founded2);      //nasla sa existujuca polozka, nastavujeme model na upravu
            if (ViewModel.CheckActualObdobie())
            {
                ViewModel.LoadZoznamy();
            }
        }
        else
        {
            Navigator.NavigateTo(Navigator.RemoveLastUrl());
            return;
        }
    }

    public async Task CloseSeasson()
    {
        if (await AprovMod.OpenModal(true))
        {
            Navigator.NavigateTo(Navigator.RemoveLastUrl());
        };
    }

    private async Task GeneratePDF()
    {
        await ViewModel.VytvorPDF();
    }
}
