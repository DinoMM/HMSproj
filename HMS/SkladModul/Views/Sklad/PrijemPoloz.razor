@namespace SkladModul
@page "/Sklad/Prijem"
@inject PrijemPolozViewModel ViewModel

<ApproveModal @ref=AprovMod ID="deletemodal"
              Text="Naozaj chcete odstrániť tento riadok?"
              FuncOnSucc="EventCallback.Empty"
              FuncOnDiss="EventCallback.Empty">
</ApproveModal>
<InfoModal @ref="InfoCantDelete" ID="infomodaldelete"
           Text="Nemožno vymazať príjemku lebo obsahuje položky.">
</InfoModal>

<div class="container">

    <div class="row pb-1">
        <div class="col-2">
            <a class="btn btn-secondary" id="uctobd" style="cursor:pointer">Obdobie:@DBLayer.Models.Sklad.ShortFromObdobie(ViewModel.Obdobie) </a>
        </div>
        <div class="col-2">
            <a class="btn btn-secondary" id="skldpick" style="cursor:pointer">Sklad:@ViewModel.Sklad.ID </a>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <h2 class="text-center font-weight-bold">Príjemky za obdobie</h2>
            <div class="col">
                <button @onclick="() => Navigator.NavigateTo(Navigator.RemoveLastUrl())" class="btn btn-primary  mb-3" type="button">Späť</button>
                <button @onclick="Create" disabled="@(!ViewModel.IsObdobieActual())" class="btn btn-primary  mb-3" type="button">➕Pridať príjemku</button>
                <button @onclick="() => Open(marked)" disabled="@(marked == null)" class="btn btn-primary  mb-3" type="button">📩Otvoriť príjemku</button>
            </div>
        </div>



    </div>

    <div class="row">
        <div class="col-12" style="height:30rem; overflow:auto">
            <SimpleTable>
                <THEAD>
                <ThSort>ID</ThSort>
                <ThSort>Vznik</ThSort>
                <ThSort>Obdobie</ThSort>
                <ThSort>OK</ThSort>

                <ThSort>Objednavka</ThSort>
                <ThSort>Dodaci</ThSort>
                <ThSort>Faktúra</ThSort>

                <ThSort>Prevodka z</ThSort>

                <th></th>
                </THEAD>
                <TBODY>
                    @if (ViewModel.NacitavaniePoloziek)
                    {
                        <SpinnerLoading Size="2.0"></SpinnerLoading>
                    }
                    else
                    {
                        @foreach (var item in ViewModel.ZoznamPrijemok)
                        {

                            <tr @onclick=@(() => marked = item) class="@(marked == item ? "selected-row" : "")" @ondblclick="@(() => Open(item))" style="cursor: pointer;">
                                <td class="col-resize">@item.ID </td>
                                <td class="col-resize">@item.Vznik.ToShortDateString() </td>
                                <td class="col-resize">@ViewModel.GetObdobie(item) </td>
                                <td class="col-resize">
                                    <SimpleCheckMark Checked="@item.Spracovana" Size="5"></SimpleCheckMark>
                                </td>
                                @if (item is DBLayer.Models.Prijemka)
                                {
                                    <td class="col-resize">@(((DBLayer.Models.Prijemka)item).Objednavka) </td>
                                    <td class="col-resize">@(((DBLayer.Models.Prijemka)item).DodaciID) </td>
                                    <td class="col-resize">@(((DBLayer.Models.Prijemka)item).FakturaID) </td>
                                    <td class="col-resize">-</td>
                                    @if (!item.Spracovana || DBLayer.Models.Prijemka.TOTAL_MAZANIE_PRIJEMOK.Contains(UserService.LoggedUserRole))
                                    {
                                        <td><a @onclick=@(() => Delete(item))><i href="#" class="bi bi-x-circle btn btn-danger"></i></a></td>
                                    }
                                    else
                                    {
                                        <td class="col-resize"></td>
                                    }
                                }
                                else
                                {
                                    <td class="col-resize">-</td>
                                    <td class="col-resize">-</td>
                                    <td class="col-resize">-</td>
                                    <td class="col-resize">@(((DBLayer.Models.Vydajka)item).Sklad) </td>
                                    <td class="col-resize"></td>
                                }


                            </tr>

                        }
                    }
                </TBODY>

            </SimpleTable>

        </div>
    </div>

</div>


@code {
    ApproveModal AprovMod = new();
    InfoModal InfoCantDelete = new();
    DBLayer.Models.PohSkup? marked;

    protected override void OnInitialized()
    {
        var founded1 = objectHolder.Find<DBLayer.Models.Sklad>();   //pokusi sa ziskat objekt z uloziska
        if (founded1 == null)
        {
            Navigator.NavigateTo(Navigator.RemoveLastUrl());
            return;
        }
        var founded2 = objectHolder.Find<string>();   //pokusi sa ziskat objekt z uloziska
        if (founded2 != null)
        {
            ViewModel.SetProp(founded1, founded2);      //nasla sa existujuca polozka, nastavujeme model na upravu

            ViewModel.LoadZoznam();
        }
        else
        {
            Navigator.NavigateTo(Navigator.RemoveLastUrl());
            return;
        }
    }

    private void Open(DBLayer.Models.PohSkup poloz)
    {
        if (poloz is DBLayer.Models.Prijemka)
        {
            objectHolder.Add(poloz);
            Create();
        }
        else  //vydajka
        {
            objectHolder.Add(poloz);
            Navigator.NavigateTo(Navigator.AddNextUrl("/ModifVydajka"));
        }
    }
    private async Task Delete(DBLayer.Models.PohSkup poloz)
    {
        marked = poloz;
        if (await AprovMod.OpenModal(true))
        {
            if (ViewModel.Vymaz((DBLayer.Models.Prijemka)marked, DBLayer.Models.Prijemka.TOTAL_MAZANIE_PRIJEMOK.Contains(UserService.LoggedUserRole)))
            {
                marked = null;
                return;
            }
            await InfoCantDelete.OpenModal();       //polozka ma polozky, nemozno vymazat
        }

    }
    private void Create()
    {
        Navigator.NavigateTo(Navigator.AddNextUrl("/ModifPrijemka"));
    }

}
